sequence - 				an ordered list of zero or more items
subsequence - 			a sequence within a sequence
non-terminal symbol - 	a syntactic part of the language being defined
meta-identifier -		the name of a non terminal symbol
start symbol -			a non-terminal symbol that is defined by one or more syntax rules but does not occur in any other syntax rule
sentence - 				a sequence of symbols that represents the start symbol
terminal symbol -		a sequence of one or more characters forming an irreducible element of a language

 * - repetition symbol
 - - except symbol
 , - concatenate symbol
 | - definition separator symbol
 = - defining symbol
 ; - terminator symbol
 
 "" - start and end of terminal symbols
'' - same as above
[] - optional symbol
{} - repetition
() - grouping
(* - start comment symbol
*) - end comment symbol

syntax=(gap separator},gap-free-symbol,{gap-separator},{gap free symbol, {gap separator}};

syntax = { syntax_rule };
syntax_rule = { meta_identifier, defining_symbol, definitions_list, terminator_symbol };
definitions_list = single_definition, { definition_separator_symbol, single_definition };	
single_definition = syntactic_term, { concatenate_symbol, syntactic_term };
syntactic_term = syntactic_factor, [ except_symbol, syntactic_exception ];
syntactic_factor = [integer, repetition_symbol],  syntactic_primary;
integer = decimal_digit, {decimal_digit};
syntactic_exception = ? syntactic_factor without meta_identifier ?;
syntactic_primary = optional_sequence | repeated_sequence | grouped_sequence | meta_identifier | terminal_string | special_sequence | empty_sequence;
optional_sequence = start_option_symbol, definitions_list, end_option_symbol;
repeated_sequence = start_repeat_symbol, definitions_list, stop_repeat_symbol;
grouped_sequence = start_group_symbol, definitions_list, stop_group_symbol;
meta_identifier = letter, {meta_identifier_character};
meta_identifier_character = letter | decimal_digit;
terminal_string = (first_quote_symbol, first_terminal_character, {first_terminal_character}, first_quote_symbol) | (second_quote_symbol, second_terminal_character, {second_terminal_character}, second_quote_symbol);
first_terminal_character = terminal_character - "first_quote_symbol";
second_terminal_character = terminal_character - "second_quote_symbol";
special_sequence = special_sequence_symbol, {special_sequence_character}, special_sequence_symbol;
special_sequence_character = terminal_character - "special_sequence_symbol";
empty_sequence = "empty";
terminal_character =  letter | decimal_digit | concatenate_symbol | defining_symbol | definition_separator_symbol 
				    | end_comment_symbol | end_group_symbol | end_option_symbol | end_repeat_symbol | except_symbol
				    | first_quote_symbol | repetition_symbol | second_quote_symbol | special_sequence_symbol
				    | start_comment_symbol | start_group_symbol | start_option_symbol | start_repeat_symbol 
				    | terminator_symbol | other_character; 
gap_free_symbol = (terminal_character - ( first_quote_symbol | second_quote_symbol )) | terminal_string;
gap_separator = space, horizontal_tabulation, new_line, vertical_tabulation, form_feed;
